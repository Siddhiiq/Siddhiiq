


table odd keys selector:

tbody > tr:nth-of-type(2n+1) > td._1hKmbr.col.col-3-12

table omiting 2 keys in a parah list:

tbody > tr:nth-of-type(2n+1) > td._1hKmbr.col.col-3-12


table omiting 3 keys in a parah list:

tbody > tr:nth-of-type(4n+1) > td._1hKmbr.col.col-3-12



table omiting 4 keys in a parah list:


tbody > tr:nth-of-type(5n+1) > td._1hKmbr.col.col-3-12

5 keys omiting :

tbody > tr:nth-of-type(6n+1) > td._1hKmbr.col.col-3-12

6 keys omiting: 

tbody > tr:nth-of-type(7n+1) > td._1hKmbr.col.col-3-12








table 1,2 key slector in parah list:

tbody > tr:nth-child(-n+2) > td._1hKmbr.col.col-3-1

like (-n+3) ==1,2,3 keys selctor 
like (-n+4) ==1,2,3,4 keys selector
In a table select the first div keys only:



._3k-BhJ:nth-child(1) > table > tbody > tr > td._1hKmbr.col.col-3-12




In a table select the first div values only:

._3k-BhJ:nth-child(1) > table > tbody > tr > td.UrwL2w
























https://www.venatorcorp.com/~/media/Files/V/Venator/annual-report-and-proxy-statement/vntr-12-31-22-20-f.pdf--$ 2.1B  , employees--3,413 




https://www.rakon.com/hubfs/Files/Investor/FY23/RAK%20FY23%20Annual%20Report.pdf--$ 180.3m  ,  employeesâ€”1000



https://stratuspropertiesinc.gcs-web.com/static-files/b62e20da-6207-415d-a995-a05d739def18--$ 24.7M    , employees--31


1070-1270---200






package bank_management_system;

import java.awt.*;

import javax.swing.*;
import java.awt.event.*;


public class Login extends JFrame implements ActionListener{
	JButton login,Clear,Signup;
	JTextField cardtextfield;
	JPasswordField pintextfield;
	Login(){
		setTitle("AUTOMATED TELLER MACHINE");
		
		
		setLayout(null);
		
		ImageIcon i1= new ImageIcon(ClassLoader.getSystemResource("bank_management_system/bank.png"));
		Image i2 = i1.getImage().getScaledInstance(100,100,Image.SCALE_DEFAULT);
		ImageIcon i3 = new ImageIcon(i2);
		JLabel label = new JLabel(i3);
		label.setBounds(70,10,100,100);
		add(label);
		
		
		JLabel label2 = new JLabel("Welcome to ATM");
		label2.setFont(new Font("roboto",Font.ITALIC,18));
		label2.setBounds(300,40,170,40);
		add(label2);
		
		JLabel cardno = new JLabel("Card No:");
		cardno.setFont(new Font("times new roman",Font.ITALIC,18));
	    cardno.setBounds(150,110,100,110);
		add(cardno);

		cardtextfield = new JTextField();
		cardtextfield.setBounds(270,150,270,30);
		add(cardtextfield);
		
		JLabel pin = new JLabel("Pin no:");
		pin.setFont(new Font("times new roman",Font.ITALIC,18));
		pin.setBounds(150,160,100,160);
		add(pin);
		
		
		pintextfield = new JPasswordField();
		pintextfield.setBounds(270,220,270,30);
		add(pintextfield);
		
		
		login = new JButton("SIGN IN");
		login.setBounds(270,300,120,40);
		login.setBackground(Color.BLACK);
		login.setForeground(Color.white);
		login.addActionListener(this);
		add(login);
		
		
		Clear = new JButton("Clear");
		Clear.setBounds(420,300,120,40);
		Clear.setBackground(Color.black);
		Clear.setForeground(Color.white);
		Clear.addActionListener(this);
        add(Clear);
		
		
		Signup = new JButton("SIGN UP");
		Signup.setBounds(270,380,270,30);
		Signup.setBackground(Color.black);
		Signup.setForeground(Color.white);
		Signup.addActionListener(this);
        add(Signup);
		
		
		getContentPane().setBackground(Color.white);
		
		setSize(800,500);
		setVisible(true);
		setLocation(350,200);
	}

	public static void main(String[] args) {
		new Login();
	}

	@Override
	public void actionPerformed(ActionEvent e) {
     
		if(e.getSource()== Clear) {
			cardtextfield.setText("");
			pintextfield.setText("");
		}else if (e.getSource()==login) {
			
			
		}else if(e.getSource()== Signup) {
			
		}
	
	}

}





hackerrank.com
leetcode.com
geeksforgeek.com
codechef.com


public class Replace {





        public static void main(String args[]){
            String s1="A rose is a rose of containing rose";
            contains(s1);



        }

        private static void contains(String s1) {
            String s2="rose";
            int Start=0,end=0;
            for(int i=0;i<s1.length();i++) {
                if(s1.charAt(i)==s2.charAt(0)) {
                    int start=i;
                    int count = 0;
                    for(int j=0;j<s2.length();j++) {
                        if(s2.charAt(j)==s1.charAt(i))
                        {
                            count++;
                            i++;
                            end=i;
                        }
                    }
                    if(count==s2.length()){
                        System.out.println("Yes contains");
                        System.out.println(start+" "+end);

                        break;
                    }else{
                        System.out.println("no does not contains");
                        break;


                    }

                }

            }


        }

    }






replacefirst code: |



public class Main {
    public static void main(String[] args) {
        String s1="A monkey is animal";
        Contains(s1);

    }
    private static void Contains(String s1) {
        String s2="monkey";
        for(int i=0; i<s1.length();i++){
            int Start,end = i;
            if(s1.charAt(i)== s2.charAt(0)){
                int count=0;
                Start=i;
                for(int j=0;j<s2.length();j++){
                    if(s2.charAt(j)==s1.charAt(i)){
                        count++;
                        i++;
                        end=i;
                }
                if(count==s2.length())
                {
                    System.out.println("yes contains");
                    System.out.println(Start+" "+end);
                    Replacement(s1,"lion",Start,end);
                    break;
                }


            }


        }
    }
}

    private static void Replacement(String s1, String replace, int start, int end) {
        StringBuffer s= new StringBuffer();
        for(int i=0;i<start;i++){
            s.append(s1.charAt(i));
        }
        s.append(replace+" ");
        for(int i=end; i<s1.length(); i++){
            s.append(s1.charAt(i));
        }

        System.out.println(s);

    }
    }



    ;
 replacefirst code:




public class trim {
    public static void main(String[] args) {
        String s1 = "    A monkey is animal   ";
        System.out.println(s1.length());
        System.out.println(s1);
        int f=0,l=s1.length()-1;
        boolean first=false,last=false;
        for(int i=0;i<s1.length();i++){
            if(s1.charAt(i)==' ' && first == false)
            {
                f++;
            }
            else
            {
                first=true;
            }
            if(s1.charAt(l)==' ' && last==false)
            {
                l--;
            }
            else
            {
              last=true;
            }
            if(first==true && last==true)
                break;
        }
        for(int i=f;i<l;i++){
            System.out.print(s1.charAt(i));
        }
        System.out.println(s1.length());
    }
}
trim program:




public class replacesentence {
    public static void main(String[] args) {
        String s1 = "A monkey is animal";
        int start=0,end=s1.length()-1;
        for(int i=s1.length()-1;i>0;i--){
            if( s1.charAt(i)!=' ')
            {
                continue;
            }
            else
            {
                start=i+1;
                reverse(s1,start,end);
                end=i-1;
            }
        }
        reverse(s1,0,end);

    }

    private static void reverse(String s1, int start, int end) {
        String s2="";
        for(int i=start;i<=end;i++){

            s2=s2+s1.charAt(i);

        }
        s2=s2+" ";
        System.out.print(s2);
    }
}
replace a sentence:



public class stripleading {
    public static void main(String[] args) {
        String s1 = "    monkey is an animal";
        int f=0;
        for(int i=0;i<=s1.length();i++)
       {

           if(s1.charAt(i)==' ')
           {
               continue;
           }
           else
           {
               f=i;
               break;
           }

       }
        for(int i=f;i<s1.length();i++)
        {
        System.out.print(s1.charAt(i));
        }
    }

}
 stripleading code:


import java.util.Optional;

public class stripleading {
    public static void main(String[] args) {
        String s1="i am     printing       something";
        boolean first_space=false;
        for(int i=0;i<s1.length();i++){
            if(s1.charAt(i)!=' '){
                System.out.print(s1.charAt(i));
                first_space=true;

            } else if (first_space==true)
            {
                System.out.print(s1.charAt(i));
                first_space=false;

            }
        }

    }

}
removing unwanted space code:



spiral matrix:

public class spiralmatrix {
    public static void main(String[] args) {

        int [][]a =new int [4][4];

        int rs=0,re=3,cs=0,ce=3;
        int no=1;
        while(no<=16) {
            int row = rs;
            for (int col = cs; col <= ce; col++) {
                a[row][col] = no;
                no++;
            }
            rs++;

            int col = ce;
            for (row = rs; row <= re; row++) {
                a[row][col] = no;
                no++;
            }
            ce--;

            row = re;
            for (col = ce; col >= cs; col--) {
                a[row][col] = no;
                no++;
            }
            re--;

            col = cs;
            for (row = re; row >= rs; row--) {
                a[row][col] = no;
                no++;
            }
            cs++;
        }
        for(int row=0;row<4;row++)
        {
            for(int col=0;col<4;col++)
            {
                System.out.print(a[row][col]+"\t");
            }
            System.out.print(" "+"\n");
        }


    }

}

reverse type of spiral matrix code:

public class spiralmatrix {
    public static void main(String[] args) {

        int[][] a = new int[4][4];

        int rs = 0, re = 3, cs = 0, ce = 3;
        int no = 16;

        int col = cs + 2;
        for (int row = rs + 2; row >= re - 1; row--) {
            a[row][col] = no;
            no--;
        }
        cs++;


        col = cs;
        for (int row = rs + 2; row >= re - 1; row--) {
            a[row][col] = no;
            no--;
        }
        cs--;

        int row = rs + 1;
        for (col = cs + 1; col >= cs + 1; col--) {
            a[row][col] = no;
            no--;
        }
        rs++;

        row = rs;
        for (col = cs + 2; col >= cs + 2; col--) {
            a[row][col] = no;
            no--;
        }
        rs--;

        row = rs + 1;
        for (col = cs + 3; col >= cs + 3; col--) {
            a[row][col] = no;
            no--;
        }
        rs++;

        col = ce;
        for (row = rs + 1; row <= rs + 2; row++) {
            a[row][col] = no;
            no--;
        }
        ce--;

        row=re;
       for(col=ce;col>=cs;col--)
       {
         a[row][col] = no;
          no--;
       }
       re--;

       col=cs;
       for( row=re;row>=rs-1;row--)
       {
           a[row][col] = no;
           no--;
       }
      cs++;

       row=rs-1;
       for(col=cs;col<=ce+1;col++){
           a[row][col] = no;
           no--;
       }
       rs++;

        for (row = 0; row < 4; row++) {
            for ( col = 0; col < 4; col++) {
                System.out.print(a[row][col] + "\t");
            }
            System.out.print(" " + "\n");
        }


    }
}



